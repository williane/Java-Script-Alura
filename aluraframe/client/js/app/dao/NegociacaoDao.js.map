{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","console","log","onerror","target","error","name","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,sB,uBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEIC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,MAAKP,MAA1E,EAAkFQ,GAAlF,CAAsFP,UAAtF,CAAd;;AAEAI,oCAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBC,wCAAQC,GAAR,CAAY,iCAAZ;AACAT;AACH,6BAHD;;AAKAE,oCAAQQ,OAAR,GAAkB,UAACH,CAAD,EAAO;AACrBC,wCAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAOM,EAAEI,MAAF,CAASC,KAAT,CAAeC,IAAtB;AACH,6BAHD;AAIH,yBAZM,CAAP;AAaH;;;iDAEY;AAAA;;AACT,+BAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIa,SAAS,OAAKlB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,OAAKP,MAA1E,EAAkFkB,UAAlF,EAAb;;AAEA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOR,SAAP,GAAmB,UAACC,CAAD,EAAO;AACtB,oCAAIU,QAAQV,EAAEI,MAAF,CAASO,MAArB;;AAEA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI5B,UAAJ,CAAe0B,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAP,0CAAMQ,QAAN;AACH,iCALD,MAKO;AACHzB,4CAAQgB,WAAR;AACH;AACJ,6BAXD;;AAaAF,mCAAOJ,OAAP,GAAiB,UAACH,CAAD,EAAO;AACpBN,uCAAOM,EAAEI,MAAF,CAASC,KAAT,CAAeC,IAAtB;AACH,6BAFD;AAGH,yBArBM,CAAP;AAsBH;;;iDAEW;AAAA;;AACR,+BAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,OAAKP,MAA1E,EAAkF6B,KAAlF,EAAd;;AAEAxB,oCAAQI,SAAR,GAAoB,UAACC,CAAD;AAAA,uCAAOP,QAAQ,mCAAR,CAAP;AAAA,6BAApB;;AAEAE,oCAAQQ,OAAR,GAAkB,UAACH,CAAD,EAAO;AACrBC,wCAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAOM,EAAEI,MAAF,CAASC,KAAT,CAAeC,IAAtB;AACH,6BAHD;AAIH,yBATM,CAAP;AAUH","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from '../models/Negociacao.js';\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).add(negociacao);\r\n\r\n            request.onsuccess = (e) => {\r\n                console.log('negociação incluida com sucesso');\r\n                resolve();\r\n            }\r\n\r\n            request.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject(e.target.error.name);\r\n            }\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = (e) => {\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = (e) => {\r\n                reject(e.target.error.name);\r\n            }\r\n        });\r\n    }\r\n\r\n    apagaTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).clear();\r\n\r\n            request.onsuccess = (e) => resolve('Negociações removidas com sucesso');\r\n\r\n            request.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject(e.target.error.name);\r\n            }\r\n        });\r\n    }\r\n\r\n}"]}